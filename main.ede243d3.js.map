{"version":3,"sources":["scripts/main.js"],"names":["baseUrl","detailUrl","getPhones","resolve","reject","errorMessage","document","createElement","innerHTML","body","append","fetch","then","response","json","catch","message","setTimeout","getPhoneDetails","param","tempArray","result","Promise","all","map","item","id","ul","appendChild","listItem"],"mappings":";AAAA,aAkDA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhDA,IAAMA,EAAN,0EAEMC,EAAN,sEAGA,SAASC,IACDC,IAUAC,EAAS,WACPC,IAAAA,EAAeC,SAASC,cAAc,QAE5CF,EAAaG,UAAb,WACAF,SAASG,KAAKC,OAAOL,IAGhBF,OAhBEQ,MAAMX,GACVY,KAAK,SAAAC,GACGA,OAAAA,EAASC,SAEjBC,MAAM,SAAAC,GACLC,WAAWb,EAAQ,OAc3B,SAASc,EAAgBC,GACjBC,IAAAA,EAAgBD,EAAAA,GAChBE,EAASC,QAAQC,IAAIH,EAAUI,IACnC,SAACC,GAASd,OAAAA,MAASV,GAAAA,OAAAA,GAAYwB,OAAAA,EAAKC,GAApC,aAGEL,GAAAA,EAAQ,CACJM,IAAAA,EAAKrB,SAASC,cAAc,MAElCD,SAASG,KAAKmB,YAAYD,GAE1BP,EAAUI,IAAI,SAACC,GACPI,IAAAA,EAAWvB,SAASC,cAAc,MAExCoB,EAAGC,YAAYC,GACfA,EAASrB,UAAeiB,GAAAA,OAAAA,EAAKC,MAI1BL,OAAAA,EAGTnB,IACGU,KAAK,SAAAS,GAAUH,OAAAA,EAAgBG","file":"main.ede243d3.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst baseUrl = `https://mate-academy.github.io/phone-catalogue-static\n/api/phones.json`;\nconst detailUrl = `https://mate-academy.github.io/\nphone-catalogue-static/api/phones/`;\n\nfunction getPhones() {\n  const resolve = () => {\n    return fetch(baseUrl)\n      .then(response => {\n        return response.json();\n      })\n      .catch(message => {\n        setTimeout(reject, 5000);\n      });\n  };\n\n  const reject = () => {\n    const errorMessage = document.createElement('span');\n\n    errorMessage.innerHTML = `Rejected`;\n    document.body.append(errorMessage);\n  };\n\n  return resolve();\n};\n\nfunction getPhoneDetails(param) {\n  const tempArray = [...param];\n  const result = Promise.all(tempArray.map(\n    (item) => fetch(`${detailUrl}${item.id}.json`)\n  ));\n\n  if (result) {\n    const ul = document.createElement('ul');\n\n    document.body.appendChild(ul);\n\n    tempArray.map((item) => {\n      const listItem = document.createElement('li');\n\n      ul.appendChild(listItem);\n      listItem.innerHTML = `${item.id}`;\n    });\n  }\n\n  return result;\n};\n\ngetPhones()\n  .then(result => getPhoneDetails(result));\n"]}